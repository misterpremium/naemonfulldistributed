#
# Sample configuration file for merlin
#
# Default options have been commented out
#
ipc_socket = /usr/local/var/lib/merlin/ipc.sock;

log_level = info;
use_syslog = 1;

# module-specific configuration options.
module {
	log_file = /usr/local/var/log/merlin/neb.log;
}

# daemon-specific config options
daemon {
	pidfile = /usr/local/var/run/merlin/merlin.pid;

	# same as the "module" section above
	log_file = /usr/local/var/log/merlin/daemon.log;

	# address to listen to. 0.0.0.0 is default
	#address = 0.0.0.0;

	# port to listen to. 15551 is default. This is a daemon
	# specific config setting, as the module never listens to
	# the network
	port = 15551;
	database {
		# change to no to disable database completely
	 enabled = no;

	}

	# this section describes how we handle config synchronization
	# It can also be configured on a per-node basis to override the
	# globals set here.
	# "push" and "fetch" point to a command supposed to be run when we
	# want to push configuration to any or all nodes in the network.
	# They're invoked with the following arguments:
	# --merlin-cfg=/path/to/merlin.conf
	object_config {
		# a "push" happens for peers and pollers that we know have an
		# older configuration than we do. This is what one would
		# normally want to happen, since it originates from the node
		# that already has all the information
		push = mon oconf push

		# a "fetch" happens for peers and masters that we know
		# have a newer configuration than we do. One won't normally
		# configure this (and it currently lacks scripting support),
		# but it's available for advanced users who know what they're
		# doing
		#fetch = mon oconf fetch
	}
}
peer cluster {
 address = 16.3.252.224;
 port = 15551;
}
